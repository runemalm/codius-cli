name: Run unittests

inputs:
  python-version:
    description: 'Python version to use'
    required: true

runs:
  using: 'composite'
  steps:

    - name: Install pyenv from source and configure environment
      run: |
        git clone https://github.com/pyenv/pyenv.git ~/.pyenv
        echo "PYENV_ROOT=$HOME/.pyenv" >> $GITHUB_ENV
        echo "$HOME/.pyenv/bin" >> $GITHUB_PATH
        echo 'eval "$(pyenv init --path)"' >> $GITHUB_ENV
      shell: bash

    - name: Install Python ${{ inputs.python-version }} via pyenv
      run: |
        pyenv install -s ${{ inputs.python-version }}
        pyenv global ${{ inputs.python-version }}
        echo "${{ inputs.python-version }}" > .python-version
      shell: bash

    - name: Verify installed Python version
      run: |
        ACTUAL=$(python -V)
        EXPECTED=${{ inputs.python-version }}
        echo "Python version installed: $ACTUAL"
        if ! python -V | grep -q "$EXPECTED"; then
          echo "Python version is not correct. Exiting."
          exit 1
        fi
      shell: bash

    - name: Install pipenv
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
      shell: bash

    - name: Setup virtual environment
      run: |
        pipenv --python ${{ inputs.python-version }} install --dev --deploy
      shell: bash

    - name: Verify virtual environment uses python version ${{ inputs.python-version }}
      run: |
        if pipenv run python -V | grep -q "${{ inputs.python-version }}"; then
          echo "Python ${{ inputs.python-version }} is being used."
        else
          echo "Python ${{ inputs.python-version }} is not being used. Exiting workflow."
          exit 1
        fi
      shell: bash

    - name: Run unittests
      run: |
        PYTHONPATH=./src:./tests pipenv run pytest ./tests/unit --junitxml=report.xml --color=yes -v --tb=short
      shell: bash

    - name: Upload JUnit report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: junit-report-${{ inputs.python-version }}
        path: report.xml

    - name: Publish test report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Unit Tests
        path: report.xml
        reporter: java-junit
